{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_METHOD_ALPHABET","SORT_METHOD_LENGTH","App","useState","sortField","setsortField","reverse","setReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAuB,WACvBC,EAAqB,SA0BpB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA3BR,SAA0BC,EAAOL,EAAWE,GAC1C,IAAMI,EAAa,YAAOD,GAgB1B,OAdIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,OAKC,IAAZT,EACKI,EAAcJ,UAGhBI,EAMcM,CACnBjB,EAAiBK,EAAWE,GAG9B,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPb,EAAaL,IAEfmB,KAAK,SACLF,UAAS,yBAAoBG,IAAG,CAC9B,WAAYhB,IAAcJ,KAN9B,iCAYA,wBACEkB,QAAS,WACPb,EAAaJ,IAEfkB,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CACjC,WAAYhB,IAAcH,KAN9B,4BAYA,wBACEiB,QAAS,WACPX,GAAYD,IAGda,KAAK,SACLF,UAAS,6BAAwBG,IAAG,CAClC,YAAwB,IAAZd,KAPhB,sBAaEF,GAAaE,IACb,wBACEY,QAAS,WACPb,EAAa,IACbE,GAAW,IAEbY,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGT,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC1GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c41595cb.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_METHOD_ALPHABET = 'alphabet';\nconst SORT_METHOD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField, reverse) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_METHOD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_METHOD_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse !== false) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setsortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, sortField, reverse,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setsortField(SORT_METHOD_ALPHABET);\n          }}\n          type=\"button\"\n          className={`button is-info ${cn({\n            'is-light': sortField !== SORT_METHOD_ALPHABET,\n          })}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setsortField(SORT_METHOD_LENGTH);\n          }}\n          type=\"button\"\n          className={`button is-success ${cn({\n            'is-light': sortField !== SORT_METHOD_LENGTH,\n          })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setReverse(!reverse);\n          }\n        }\n          type=\"button\"\n          className={`button is-warning  ${cn({\n            'is-light': reverse === false,\n          })}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) && (\n          <button\n            onClick={() => {\n              setsortField('');\n              setReverse(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}